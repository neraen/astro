name: Pipeline-CI
on:
  push:
    branches: [main]
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP, extensions and composer with shivammathur/setuphp
        # You may pin to the exact commit or the version.
        # uses: shivammathur/setup-php@7fdd3ece872ec7ec4c098ae5ab7637d5e0a96067
        uses: shivammathur/setup-php@2.26.0
        with:
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json
      
      - name: cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}
          
      #- name: Debug working directory
        #run: |
          #pwd
          #ls -l


      - name: Composer install
        working-directory: ${{ github.workspace }}/backend
        run: composer install --no-interaction --no-progress

      - name: Symfony CLI
        working-directory: ${{ github.workspace }}/backend
        run: |
            curl -sS https://get.symfony.com/cli/installer | bash
            mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

      - name: Symfony Check Vulnerabilities
        working-directory: ${{ github.workspace }}/backend
        run: symfony check:security

      - name: PHP-CS-Fixer
        working-directory: ${{ github.workspace }}/backend
        run: |
            composer require friendsofphp/php-cs-fixer
            ./vendor/bin/php-cs-fixer fix --dry-run
            
      - name: PHP Stan
        working-directory: ${{ github.workspace }}/backend
        run: |
            ./vendor/bin/simple-phpunit install
            composer config --no-plugins allow-plugins.phpstan/extension-installer true
            composer require phpstan/phpstan
            composer require phpstan/extension-installer
            composer require phpstan/phpstan-symfony
            ./vendor/bin/phpstan analyse src --memory-limit 1G
            
      - name: Lint YAML files
        working-directory: ${{ github.workspace }}/backend
        run: ./bin/console lint:yaml config --parse-tags

      - name: Lint Parameters and service
        working-directory: ${{ github.workspace }}/backend
        run: ./bin/console lint:container --no-debug

      - name: Lint Doctrine entities
        working-directory: ${{ github.workspace }}/backend
        run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      - name: PHP Unit
        working-directory: ${{ github.workspace }}/backend
        run: ./bin/phpunit
